version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Initialize venv / Install deps
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
      - run:
          name: Linting
          command: |
            . venv/bin/activate
            flake8
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pytest

  containerize-and-deploy:
    docker:
      - image: cimg/python:stable
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generating container name
          command: |
            DOCKER_NAME="$(echo "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" | tr '[:upper:]' '[:lower:]')"
            echo "export DOCKER_NAME=${DOCKER_NAME}" >> ${BASH_ENV}
      - run:
          name: Building container
          command: |
            docker build --tag $DOCKER_LOGIN/${DOCKER_NAME} .
      - run:
          name: Deploying to DockerHub
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/${DOCKER_NAME}
      - run:
          name: Deploying to Azure
          command: |
            echo "$AZURE_PASSWORD" | docker login ${AZURE_REPO_URL} --username $AZURE_USERNAME --password-stdin
            docker push $DOCKER_LOGIN/${DOCKER_NAME}

workflows:
  main:
    jobs:
      - build-and-test
      - containerize-and-deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - main